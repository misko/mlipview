# --- Redirect HTTP -> HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name nanoview.net www.nanoview.net;
    return 301 https://$host$request_uri;
}

# --- HTTPS site + WebSocket proxy to 127.0.0.1:8001
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name nanoview.net www.nanoview.net;

    root /var/www/nanoview.net/html;
    index index.html;

    # --- Your TLS settings (carried over) ---
    ssl_certificate     /etc/ssl/nanoview.net/fullchain.pem;
    ssl_certificate_key /etc/ssl/nanoview.net/nanoview.net.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Serve static site
    location / {
        try_files $uri $uri/ =404;
    }

    # WebSocket endpoint (update path if your client connects elsewhere)
    # e.g. client connects to wss://nanoview.net/ws
    location /ws {
        proxy_pass http://127.0.0.1:8001;

        # WebSocket essentials
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Forward client info
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Long-lived socket timeouts
        proxy_read_timeout  600s;
        proxy_send_timeout  600s;
        proxy_buffering off;
    }

    # Optional hardening (enable after TLS is confirmed working)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # add_header X-Content-Type-Options nosniff;
    # add_header X-Frame-Options SAMEORIGIN;
}

